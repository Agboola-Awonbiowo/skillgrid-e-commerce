[{"/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/index.js":"1","/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/App.js":"2","/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/store.js":"3","/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/screen/RegisterScreen.js":"4","/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/screen/HomeScreen.js":"5","/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/screen/ResetPasswordScreen.js":"6","/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/screen/MercahantsEditScreen.js":"7","/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/screen/SigninScreen.js":"8","/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/screen/MerchantsListScreen.js":"9","/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/screen/MerchantScreen.js":"10","/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/actions/userActions.js":"11","/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/components/AdminRoute.js":"12","/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/reducers/userReducers.js":"13","/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/components/LoadingBox.js":"14","/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/components/MessageBox.js":"15","/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/constants/userConstants.js":"16"},{"size":335,"mtime":1626701585641,"results":"17","hashOfConfig":"18"},{"size":7053,"mtime":1626701585639,"results":"19","hashOfConfig":"18"},{"size":925,"mtime":1626701585642,"results":"20","hashOfConfig":"18"},{"size":3709,"mtime":1626701585642,"results":"21","hashOfConfig":"18"},{"size":146,"mtime":1626701585641,"results":"22","hashOfConfig":"18"},{"size":574,"mtime":1626701585642,"results":"23","hashOfConfig":"18"},{"size":8936,"mtime":1626701585641,"results":"24","hashOfConfig":"18"},{"size":3764,"mtime":1626701585642,"results":"25","hashOfConfig":"18"},{"size":4250,"mtime":1626701585642,"results":"26","hashOfConfig":"18"},{"size":11704,"mtime":1626706388562,"results":"27","hashOfConfig":"18"},{"size":4665,"mtime":1626701585639,"results":"28","hashOfConfig":"18"},{"size":531,"mtime":1626701585640,"results":"29","hashOfConfig":"18"},{"size":2634,"mtime":1626701585641,"results":"30","hashOfConfig":"18"},{"size":212,"mtime":1626701585640,"results":"31","hashOfConfig":"18"},{"size":204,"mtime":1626701585640,"results":"32","hashOfConfig":"18"},{"size":1786,"mtime":1626701585640,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1k7or2k",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/index.js",[],["69","70"],"/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/App.js",[],"/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/store.js",[],"/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/screen/RegisterScreen.js",[],"/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/screen/HomeScreen.js",[],"/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/screen/ResetPasswordScreen.js",[],"/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/screen/MercahantsEditScreen.js",["71","72"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { retrieveMerchants } from \"../actions/userActions\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport axios from \"axios\";\n// import { MERCHANT_UPDATE_RESET } from \"../constants/userConstants\";\n\nexport default function MercahantsEditScreen(props) {\n  const userId = props.match.params.id;\n  // const [id, setId] = useState(\"\");\n  const [user_id, setUser_Id] = useState(\"\");\n  const [photo_img, setPhoto_Image] = useState(null);\n  const [company_name, setCompany_Name] = useState(\"\");\n  const [company_address, setCompany_Address] = useState(\"\");\n  const [telephone, setTelephone] = useState(\"\");\n  const [state_location, setState_Location] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [trade_type, setTrade_Type] = useState(\"\");\n  const [approval, setApproval] = useState(false);\n  const [successUpdate, setSuccessUpdate] = useState(false);\n  const [loadingUpdate, setLoadingUpdate] = useState(false);\n  const [errorUpdate, setErrorUpdate] = useState(\"\");\n  // const [reset, setReset] = useState([]);\n\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n\n  const userRetrieveMerchants = useSelector(\n    (state) => state.userRetrieveMerchants\n  );\n\n  const { loading, error, merchant } = userRetrieveMerchants;\n\n  // const merchantUpdate = useSelector((state) => state.merchantUpdate);\n  // const {\n  //   loading: loadingUpdate,\n  //   error: errorUpdate,\n  //   success: successUpdate,\n  // } = merchantUpdate;\n  const dispatch = useDispatch();\n\n  // const changeHandler = (e) => {\n  //   setPhoto_Image(e.target.files[0]);\n  //   setIsSelected(true);\n  // };\n\n  useEffect(() => {\n    if (successUpdate) {\n      // dispatch({ type: MERCHANT_UPDATE_RESET });\n      props.history.push(\"/merchantslist\");\n    }\n    if (!merchant) {\n      dispatch(retrieveMerchants(userId));\n    } else {\n      // setPhoto_Image(merchant.photo_img);\n      setCompany_Name(merchant.company_name);\n      setCompany_Address(merchant.company_address);\n      setTelephone(merchant.telephone);\n      setState_Location(merchant.state_location);\n      setCity(merchant.city);\n      setTrade_Type(merchant.trade_type);\n      //setApproval(merchant.approval);\n      setUser_Id(merchant.user_id);\n    }\n  }, [dispatch, props.history, successUpdate, merchant, userId, approval]);\n\n  // const changeApproval = () => {\n  //   setApproval({ approval: approval ? false : true });\n  // };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // dispatch update user\n    // dispatch(\n    //   updateMerchant({\n    //     id: userId,\n    //     user_id,\n    //     photo_img,\n    //     company_name,\n    //     company_address,\n    //     telephone,\n    //     state_location,\n    //     city,\n    //     trade_type,\n    //     approval,\n    //   })\n    // );\n    setLoadingUpdate(true);\n    let form_data = new FormData();\n    // form_data.append(\"photo_img\", photo_img);\n    form_data.append(\"company_name\", merchant.company_name);\n    form_data.append(\"company_address\", merchant.company_address);\n    form_data.append(\"user_id\", merchant.user_id);\n    // form_data.append(\"telephone\", merchant.telephone);\n    // form_data.append(\"state_loaction\", merchant.state_location);\n    // form_data.append(\"city\", merchant.city);\n    form_data.append(\"trade_type\", merchant.trade_type);\n    form_data.append(\"approval\", approval);\n    // form_data.append(\"id\", merchant.id);\n    // console.log(approval);\n    return (\n      axios\n        .put(\n          `https://isaacpyth.pythonanywhere.com/api/retrievemerchants/${merchant.id}`,\n          merchant,\n          {\n            headers: {\n              // \"content-type\": \"multipart/form-data\",\n              \"Content-Type\": \"application/json\",\n\n              Authorization: `Bearer ${userInfo.token}`,\n            },\n          }\n        )\n\n        .then((res) => {\n          setSuccessUpdate(res.data);\n        })\n\n        .then(() => {\n          setLoadingUpdate(false);\n        })\n\n        //  .then(() => {\n        //     props.history.push(\"/merchantslist\");\n        //   })\n        .catch((errorUpdate) => {\n          setLoadingUpdate(false);\n          setErrorUpdate({\n            errorUpdate: errorUpdate.response.data.d,\n          });\n          console.log(errorUpdate);\n        })\n    );\n  };\n\n  return (\n    <div>\n      {/* <div className=\"photo_merchant\">\n        <img src={photo_img} alt={userId}></img>\n      </div> */}\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div>\n          <h1>Edit User {company_name}</h1>\n          {loadingUpdate && <LoadingBox></LoadingBox>}\n          {errorUpdate && (\n            <MessageBox variant=\"danger\">{errorUpdate.errorUpdate}</MessageBox>\n          )}\n          {/* {successUpdate && <MessageBox>{successUpdate}</MessageBox>} */}\n        </div>\n        {loading ? (\n          <LoadingBox />\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n          <>\n            {/* <div className=\"photo_merchant\">\n              <img src={photo_img} alt={userId}></img>\n            </div> */}\n            {/* <div style={{ display: \"none\" }}>\n              <label></label>\n              <input\n                type=\"text\"\n                namnId\"\n    readOnly\n              ={userId}\n                onChange={userId}\n              />\n            </div>\n            <div style={{ display: \"none\" }}>\n              <label></label>\n              <input\n                type=\"text\"\n                name=\"user_id\"\n                readOnly\n                value={user_id}\n                onChange={(e) => setUser_Id(e.target.value)}\n              />\n            </div> */}\n            <div>\n              <label htmlFor=\"photo_img\">photo_img</label>\n              <input\n                id=\"image\"\n                name=\"file\"\n                type=\"file\"\n                placeholder=\"Enter photo_img\"\n                accept=\"image/png, image/jpeg\"\n                // value={photo_img}\n                onChange={(e) => {\n                  setPhoto_Image(\"photo_img\", e.target.files[0]);\n                }}\n              ></input>\n            </div>\n            <div>\n              <label htmlFor=\"company_name\">Company Name</label>\n              <input\n                id=\"company_name\"\n                type=\"text\"\n                placeholder=\"Enter company_name\"\n                value={company_name}\n                onChange={(e) => setCompany_Name(e.target.value)}\n              ></input>\n            </div>\n            <div>\n              <label htmlFor=\"company_address\">company_address</label>\n              <input\n                id=\"company_address\"\n                type=\"company_address\"\n                placeholder=\"Enter company_address\"\n                value={company_address}\n                onChange={(e) => setCompany_Address(e.target.value)}\n              ></input>\n            </div>\n            <div>\n              <label htmlFor=\"telephone\">Telephone</label>\n              <input\n                id=\"telephone\"\n                type=\"telephone\"\n                placeholder=\"Enter telephone\"\n                value={telephone}\n                onChange={(e) => setTelephone(e.target.value)}\n              ></input>\n            </div>\n            <div>\n              <label htmlFor=\"state_location\">State</label>\n              <input\n                id=\"state_location\"\n                type=\"state_location\"\n                placeholder=\"Enter state_location\"\n                value={state_location}\n                onChange={(e) => setState_Location(e.target.value)}\n              ></input>\n            </div>\n\n            <div>\n              <label htmlFor=\"City\">City</label>\n              <input\n                id=\"City\"\n                type=\"City\"\n                placeholder=\"Enter City\"\n                value={city}\n                onChange={(e) => setCity(e.target.value)}\n              ></input>\n            </div>\n\n            <div>\n              <label htmlFor=\"trde_type\">Trade</label>\n              <input\n                id=\"trade_type\"\n                type=\"trade_type\"\n                placeholder=\"Enter trade_type\"\n                value={trade_type}\n                onChange={(e) => setTrade_Type(e.target.value)}\n              ></input>\n            </div>\n            <div>\n              <label htmlFor=\"approval\">Approve</label>\n              <input\n                id=\"approval\"\n                type=\"checkbox\"\n                checked={approval}\n                onChange={() => setApproval((value) => !value)}\n              ></input>\n            </div>\n\n            <div>\n              <button type=\"submit\" className=\"primary\">\n                Update\n              </button>\n            </div>\n          </>\n        )}\n      </form>\n    </div>\n  );\n}\n","/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/screen/SigninScreen.js",[],"/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/screen/MerchantsListScreen.js",["73","74"],"import React, { useEffect, useState } from \"react\";\n// import { useSelector } from \"react-redux\";\n// import axios from \"axios\";\n// import Modal from \"react-modal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { retrieveAllMerchants } from \"../actions/userActions\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\n// Modal.setAppElement(\"#root\");\n\nfunction MerchantsListScreen(props) {\n  const userRetrieveAllMerchants = useSelector(\n    (state) => state.userRetrieveAllMerchants\n  );\n  const { loading, error, merchants } = userRetrieveAllMerchants;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(retrieveAllMerchants());\n  }, [dispatch]);\n  //   const [merchants, setMerchants] = useState([]);\n  //   const [modalOpen, setModalOpen] = useState(false);\n\n  //   const userSignin = useSelector((state) => state.userSignin);\n  //   const { userInfo } = userSignin;\n\n  //   const MerData = async () => {\n  //     const response = await axios.get(\n  //       \"https://isaacpyth.pythonanywhere.com/api/retrievallemerchants/\",\n  //       {\n  //         headers: {\n  //           \"content-type\": \"multipart/form-data\",\n  //           Authorization: `Bearer ${userInfo.token}`,\n  //         },\n  //       }\n  //     );\n  //     setMerchants(response.data.results);\n  //   };\n\n  //   useEffect(() => {\n  //     MerData();\n  //   }, []);\n\n  //   const customStyles = {\n  //     // overlay: {\n  //     //   backgroundColor:'grey'\n  //     // },\n\n  //     content: {\n  //       top: \"50%\",\n  //       left: \"50%\",\n  //       right: \"auto\",\n  //       bottom: \"auto\",\n  //       marginRight: \"-50%\",\n  //       transform: \"translate(-50%, -50%)\",\n  //       height: \"300px\",\n  //       width: \"400px\",\n  //       overflow: \"hidden\",\n  //       display: \"flex\",\n  //       justifyContent: \"space-around\",\n  //       alignItems: \"center\",\n  //       flexDirection: \"column\",\n  //     },\n  //   };\n\n  return (\n    <div>\n      <h1>Merchants</h1>\n      {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <div>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>MERCHANT ID</th>\n                <th>USER ID</th>\n                <th>COMPANY NAME</th>\n                <th>STATUS</th>\n                <th>PHONE NUMBER</th>\n                <th>ACTIONS</th>\n              </tr>\n            </thead>\n            <tbody>\n              {merchants.map((merchant) => (\n                <tr key={merchant.id}>\n                  <td>{merchant.id}</td>\n                  <td>{merchant.user_id}</td>\n                  <td>{merchant.company_name}</td>\n                  <td>{merchant.approval ? \"APPROVED\" : \"PENDING\"}</td>\n                  <td>{merchant.telephone}</td>\n                  <td>\n                    <button type=\"button\" className=\"small\">\n                      Edit\n                    </button>\n                    <button type=\"button\" className=\"small\">\n                      Delete\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      className=\"small\"\n                      className={\n                        merchant.approval\n                          ? \"btn-table-success\"\n                          : \"btn-table-error\"\n                      }\n                      // onClick={() => setModalOpen(true)}\n                      onClick={() =>\n                        props.history.push(`/merchants/${merchant.id}/edit`)\n                      }\n                    >\n                      Conferm\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          {/* <Modal isOpen={modalOpen} style={customStyles}>\n          {merchants.map((merchant) => (\n            <div key={merchant.id}>\n              <div>\n                <div key={merchant.id}></div>\n                <img src={merchant.photo_img} alt={merchant.company_name}></img>\n              </div>\n            </div>\n          ))}\n        </Modal> */}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MerchantsListScreen;\n","/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/screen/MerchantScreen.js",["75","76","77","78"],"/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/actions/userActions.js",[],"/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/components/AdminRoute.js",[],"/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/reducers/userReducers.js",[],"/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/components/LoadingBox.js",[],"/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/components/MessageBox.js",[],"/Users/kudiinc/Documents/web_dev_project/skillgrid-e-commerce/src/constants/userConstants.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":12,"column":10,"nodeType":"85","messageId":"86","endLine":12,"endColumn":17},{"ruleId":"83","severity":1,"message":"87","line":13,"column":10,"nodeType":"85","messageId":"86","endLine":13,"endColumn":19},{"ruleId":"83","severity":1,"message":"88","line":1,"column":28,"nodeType":"85","messageId":"86","endLine":1,"endColumn":36},{"ruleId":"89","severity":1,"message":"90","line":104,"column":23,"nodeType":"91","messageId":"92","endLine":108,"endColumn":24},{"ruleId":"83","severity":1,"message":"93","line":12,"column":10,"nodeType":"85","messageId":"86","endLine":12,"endColumn":19},{"ruleId":"83","severity":1,"message":"94","line":22,"column":10,"nodeType":"85","messageId":"86","endLine":22,"endColumn":17},{"ruleId":"83","severity":1,"message":"95","line":23,"column":10,"nodeType":"85","messageId":"86","endLine":23,"endColumn":19},{"ruleId":"83","severity":1,"message":"96","line":196,"column":9,"nodeType":"85","messageId":"86","endLine":196,"endColumn":21},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'user_id' is assigned a value but never used.","Identifier","unusedVar","'photo_img' is assigned a value but never used.","'useState' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Checkmark' is defined but never used.","'success' is assigned a value but never used.","'modalOpen' is assigned a value but never used.","'customStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]